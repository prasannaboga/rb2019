version: 0.2

phases:
  install:
    commands:
      - echo Entered into install phase - `date`
    finally:
      - echo Finally in install phase - `date`
  pre_build:
    commands:
      - echo Entered into pre_build phase - `date`
      - echo Logging into ECR
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo IMAGE_TAG - $IMAGE_TAG
      - REPO_URL=$ECR_URL/rb2019
    finally:
      - echo Finally in pre_build phase - `date`
  build:
    commands:
      - echo Entered into build phase - `date`
      - echo Building the Docker image
      - docker build -t $REPO_URL:latest .
      - docker tag $REPO_URL:latest $REPO_URL:$IMAGE_TAG
    finally:
      - echo Finally in build phase - `date`
  post_build:
    commands:
      - echo Entered into post_build - `date`
      - echo Pushing the Docker image
      - docker push $REPO_URL
      - printf '{"ImageURI":"%s"}' $REPO_URL:$IMAGE_TAG > imageDetail.json
      - sed -i -e "s|aws-region-id|$AWS_REGION|g" appspec.yml
      - sed -i -e "s|aws-account-id|$AWS_ACCOUNT_ID|g" appspec.yml
      - sed -i -e "s|task-definition-version|$TASK_DEFINITION_VERSION|g" appspec.yml
    finally:
      - echo Finally in post_build phase - `date`

artifacts:
  files:
    - appspec.yaml
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
    ImageArtifact:
      files:
        - imageDetail.json

cache:
  paths:
    - '/root/.m2/**/*'
    - '/root/.npm/**/*'
    - 'build/**/*'
